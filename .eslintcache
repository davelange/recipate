[{"D:\\recipate\\src\\index.js":"1","D:\\recipate\\src\\App.js":"2","D:\\recipate\\src\\reportWebVitals.js":"3","D:\\recipate\\src\\pages\\Home.js":"4","D:\\recipate\\src\\pages\\SearchResults.js":"5","D:\\recipate\\src\\containers\\PopularRecipes.js":"6","D:\\recipate\\src\\containers\\SplashScreen.js":"7","D:\\recipate\\src\\components\\RecipeCard.js":"8","D:\\recipate\\src\\components\\Button.js":"9","D:\\recipate\\src\\containers\\SearchSettings.js":"10","D:\\recipate\\src\\components\\Checkbox.js":"11","D:\\recipate\\src\\components\\MealTypeCard.js":"12","D:\\recipate\\src\\state\\actions.js":"13","D:\\recipate\\src\\api\\apiRequests.js":"14","D:\\recipate\\src\\state\\initialStoreData.js":"15","D:\\recipate\\src\\state\\appContexts.js":"16","D:\\recipate\\src\\containers\\Search.js":"17","D:\\recipate\\src\\containers\\ResultsDisplay.js":"18","D:\\recipate\\src\\pages\\Recipe.js":"19","D:\\recipate\\src\\components\\Loader.js":"20","D:\\recipate\\src\\components\\RecipeLabel.js":"21","D:\\recipate\\src\\containers\\LabelDisplay.js":"22","D:\\recipate\\src\\containers\\RecipeHeader.js":"23","D:\\recipate\\src\\containers\\RecipeIngredients.js":"24","D:\\recipate\\src\\components\\Ingredient.js":"25","D:\\recipate\\src\\containers\\RecipeInstructions.js":"26","D:\\recipate\\src\\components\\RecipeSectionHeader.js":"27","D:\\recipate\\src\\components\\RecipeCredits.js":"28","D:\\recipate\\src\\containers\\SavedRecipes.js":"29","D:\\recipate\\src\\containers\\SaveRecipe.js":"30"},{"size":500,"mtime":1611254069642,"results":"31","hashOfConfig":"32"},{"size":1660,"mtime":1611674574608,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1175,"mtime":1611679773089,"results":"35","hashOfConfig":"32"},{"size":1075,"mtime":1611666049501,"results":"36","hashOfConfig":"32"},{"size":458,"mtime":1611608643502,"results":"37","hashOfConfig":"32"},{"size":195,"mtime":1611081892259,"results":"38","hashOfConfig":"32"},{"size":1033,"mtime":1611670639964,"results":"39","hashOfConfig":"32"},{"size":258,"mtime":1611348895672,"results":"40","hashOfConfig":"32"},{"size":2087,"mtime":1611600001350,"results":"41","hashOfConfig":"32"},{"size":361,"mtime":1611331515060,"results":"42","hashOfConfig":"32"},{"size":823,"mtime":1611599921925,"results":"43","hashOfConfig":"32"},{"size":1021,"mtime":1611674437761,"results":"44","hashOfConfig":"32"},{"size":2628,"mtime":1611672253236,"results":"45","hashOfConfig":"32"},{"size":28242,"mtime":1611601846505,"results":"46","hashOfConfig":"32"},{"size":174,"mtime":1611175476662,"results":"47","hashOfConfig":"32"},{"size":2002,"mtime":1611608416576,"results":"48","hashOfConfig":"32"},{"size":740,"mtime":1611608560257,"results":"49","hashOfConfig":"32"},{"size":3128,"mtime":1611678636446,"results":"50","hashOfConfig":"32"},{"size":326,"mtime":1611679752459,"results":"51","hashOfConfig":"32"},{"size":345,"mtime":1611598926855,"results":"52","hashOfConfig":"32"},{"size":779,"mtime":1611609916696,"results":"53","hashOfConfig":"32"},{"size":502,"mtime":1611601205348,"results":"54","hashOfConfig":"32"},{"size":1926,"mtime":1611676004560,"results":"55","hashOfConfig":"32"},{"size":272,"mtime":1611679728877,"results":"56","hashOfConfig":"32"},{"size":1226,"mtime":1611676011754,"results":"57","hashOfConfig":"32"},{"size":583,"mtime":1611672681449,"results":"58","hashOfConfig":"32"},{"size":200,"mtime":1611604921972,"results":"59","hashOfConfig":"32"},{"size":580,"mtime":1611674812281,"results":"60","hashOfConfig":"32"},{"size":1423,"mtime":1611678385285,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"n1hjw5",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\recipate\\src\\index.js",[],["130","131"],"D:\\recipate\\src\\App.js",[],"D:\\recipate\\src\\reportWebVitals.js",[],"D:\\recipate\\src\\pages\\Home.js",["132"],"D:\\recipate\\src\\pages\\SearchResults.js",["133"],"import React from 'react';\r\nimport {API_ComplexSearch} from '../api/apiRequests';\r\nimport { ResultsDisplay } from '../containers/ResultsDisplay';\r\nimport Loader from '../components/Loader';\r\n\r\nexport default function SearchResults(props) {\r\n\r\n    const [searchResults, setSearchResults] = React.useState({});\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(true);\r\n        getSearchResults();        \r\n    }, [props.query]);\r\n\r\n    async function getSearchResults() {\r\n        const data = await API_ComplexSearch(props.query);\r\n        setSearchResults( data );\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"lg:container mx-auto py-6 px-8\">            \r\n\r\n            { isLoading ? \r\n                <Loader />                \r\n                :\r\n                <>\r\n                <ResultsDisplay\r\n                    results={searchResults.results}\r\n                    selectRecipe={props.selectRecipe} />\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","D:\\recipate\\src\\containers\\PopularRecipes.js",[],"D:\\recipate\\src\\containers\\SplashScreen.js",[],"D:\\recipate\\src\\components\\RecipeCard.js",[],"D:\\recipate\\src\\components\\Button.js",[],"D:\\recipate\\src\\containers\\SearchSettings.js",["134"],"import React from 'react';\r\nimport Button from '../components/Button';\r\nimport Checkbox from '../components/Checkbox';\r\nimport MealTypeCard from '../components/MealTypeCard';\r\nimport {toggleQueryOption, setMealOption} from '../state/actions';\r\nimport {QueryContext} from '../state/appContexts';\r\nimport {mealTypes} from '../state/initialStoreData';\r\n\r\nfunction SearchSettings() {\r\n    \r\n    const {query, setQuery} = React.useContext(QueryContext);        \r\n\r\n    return (\r\n        <div className=\"expand-collapse overflow-hidden\">           \r\n\r\n            <div className=\"my-5\">\r\n                <legend className=\"my-2 text-gray-400\">Settings</legend>\r\n                <fieldset className=\"flex justify-between align-center\">\r\n                    { query.options.map( (item, i) => (\r\n                    <Checkbox \r\n                        item={item} \r\n                        key={item.queryStr} \r\n                        clickEv={() => setQuery( toggleQueryOption(query, i) ) } />\r\n                    )) }\r\n                </fieldset>\r\n            </div>  \r\n\r\n            <div className=\"my-5\">\r\n                <legend className=\"my-2 text-gray-400\">Type of meal</legend>\r\n                <fieldset className=\"bg-gray-50 flex flex-wrap justify-between px-3 rounded-2xl relative -left-1\">\r\n                    { mealTypes.map( item => (\r\n                        <MealTypeCard\r\n                            data={item}     \r\n                            isChosen={ item.name == query.mealType }                       \r\n                            key={item.name}\r\n                            clickEv={() => setQuery( setMealOption(query, item.name) ) } />\r\n                    )) }\r\n                </fieldset>\r\n            </div>\r\n                                            \r\n            <Button \r\n                className=\"bg-red-500 rounded-3xl p-3 my-2 text-white w-full text-center\"\r\n                text=\"Find me some recipes!\"\r\n                type=\"submit\">                    \r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SearchSettings);","D:\\recipate\\src\\components\\Checkbox.js",[],"D:\\recipate\\src\\components\\MealTypeCard.js",[],"D:\\recipate\\src\\state\\actions.js",["135"],"function toggleQueryOption( query, toggled ) {\r\n    let newOptions = query.options.map( (item, i) => { \r\n        if( i == toggled ) item.value = !item.value;\r\n        return item;\r\n    })  \r\n    return {...query, options: newOptions};\r\n}\r\n\r\nfunction setMealOption( query, selected ) {\r\n    return {...query, mealType: selected};\r\n}\r\n\r\nfunction setQueryTerm( query, str ) {    \r\n    return {...query, term: str};\r\n}\r\n\r\nfunction recipeTimeCalc( n ) {\r\n    if( n > 60 ) {\r\n        return `${Math.floor(n / 60)} - ${Math.ceil(n / 60)} hrs`;\r\n    }\r\n    else {\r\n        return `${n} mins`;\r\n    }\r\n}\r\n\r\nfunction saveToLocalStorage( data ) {\r\n    let JSONData = JSON.stringify(data);\r\n    localStorage.setItem('rcptSavedRecipes', JSONData);\r\n}\r\n\r\nfunction readLocalStorage() {\r\n    let data = localStorage.getItem('rcptSavedRecipes');\r\n    return data ? JSON.parse(data) : [];\r\n}\r\n\r\nexport { \r\n    toggleQueryOption,\r\n    setMealOption,\r\n    setQueryTerm,\r\n    recipeTimeCalc,\r\n    saveToLocalStorage,\r\n    readLocalStorage\r\n};","D:\\recipate\\src\\api\\apiRequests.js",["136","137"],"const API_KEY = '1372edba263a4d10b79a8a8c46f412bf';\r\nconst BASE_URL = `https://api.spoonacular.com`;\r\n\r\n//cache object\r\nlet cache = {\r\n    random: null,\r\n    \r\n    complex: {\r\n        params: {},\r\n        results: []\r\n    },    \r\n    \r\n    recipes: [],\r\n\r\n    setRandom(data) {\r\n        this.random = data;\r\n    },\r\n\r\n    setComplexSearch(params, results) {\r\n        this.complex.params = params;\r\n        this.complex.results = results;\r\n    },\r\n\r\n    getRecipe( id ) {\r\n        return this.recipes.find( item => item.id == id );\r\n    },\r\n\r\n    addRecipe( data ) {\r\n        this.recipes.push(data);\r\n        if( this.recipes.length == 10 ) {\r\n            this.recipes.shift();\r\n        }\r\n    }\r\n};\r\n\r\n//random search\r\nasync function API_Random() {    \r\n    if( cache.random ) {\r\n        return cache.random;\r\n    }\r\n    else {\r\n        let data = await request( `${BASE_URL}/recipes/random?apiKey=${API_KEY}&number=2` );        \r\n        cache.setRandom(data.recipes);        \r\n        return data.recipes;        \r\n    }    \r\n}\r\n\r\n//complex search\r\nasync function API_ComplexSearch(params) {\r\n    if( cache.complex.params === params ) {\r\n        return cache.complex.results;\r\n    }\r\n    else {                \r\n        let data = await request(buildComplexQueryURL(params));        \r\n        cache.setComplexSearch( params, data );\r\n        return data;        \r\n    }\r\n}\r\n\r\n//get recipe by id\r\nasync function API_Get_Recipe( id ) {\r\n    \r\n    let findInCache = cache.getRecipe(id);\r\n    \r\n    if( findInCache ) {\r\n        return findInCache;\r\n    }\r\n    else {\r\n        let data = await request(`${BASE_URL}/recipes/${id}/information?apiKey=${API_KEY}`);        \r\n        cache.addRecipe(data);\r\n        return data;\r\n    }        \r\n}\r\n\r\nfunction buildComplexQueryURL(params) {\r\n    let URL = `${BASE_URL}/recipes/complexSearch?apiKey=${API_KEY}&addRecipeInformation=true&instructionsRequired=true`;\r\n\r\n    if( params.term ) {\r\n        URL += `&query=${encodeURIComponent(params.term)}`;\r\n    }\r\n\r\n    if( params.mealType ) {\r\n        URL += `&type=${encodeURIComponent(params.mealType)}`\r\n    }\r\n\r\n    let diet = params.options\r\n        .filter( opt => opt.value )\r\n        .map( opt => encodeURIComponent(opt.name) )\r\n        .join(',');\r\n\r\n    if( diet ) {\r\n        URL += `&diet=${diet}`;\r\n    }\r\n\r\n    return URL;\r\n}\r\n\r\nasync function request( url ) {\r\n    let req = await fetch(url);\r\n    if( isError(req) ) {\r\n        return 'error';\r\n    }\r\n    return await req.json();\r\n}\r\n\r\nfunction isError(req) {\r\n    return req.status !== 200;    \r\n}\r\n\r\nexport {\r\n    API_Random,\r\n    API_ComplexSearch,\r\n    API_Get_Recipe\r\n};","D:\\recipate\\src\\state\\initialStoreData.js",[],"D:\\recipate\\src\\state\\appContexts.js",[],"D:\\recipate\\src\\containers\\Search.js",[],"D:\\recipate\\src\\containers\\ResultsDisplay.js",[],"D:\\recipate\\src\\pages\\Recipe.js",["138","139","140"],"import React, { useEffect } from 'react';\r\nimport Loader from '../components/Loader';\r\nimport RecipeHeader from '../containers/RecipeHeader';\r\nimport RecipeIngredients from '../containers/RecipeIngredients';\r\nimport RecipeInstructions from '../containers/RecipeInstructions';\r\nimport RecipeCredits from '../components/RecipeCredits';\r\nimport { RecipeContext } from '../state/appContexts';\r\nimport {sample} from '../state/initialStoreData'\r\nimport { API_Get_Recipe } from '../api/apiRequests';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { saveToLocalStorage } from '../state/actions';\r\nimport SaveRecipe from '../containers/SaveRecipe';\r\n\r\n\r\nfunction Recipe( props ) {\r\n\r\n    const { selectedRecipe, setSelectedRecipe } = React.useContext(RecipeContext);\r\n\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const [isSaved, setIsSaved] = React.useState();\r\n\r\n    const location = useLocation();    \r\n\r\n    useEffect( () => {\r\n        getRecipeById();\r\n        setIsSaved( checkIfSaved() );\r\n    }, [props.savedRecipes]);\r\n\r\n    async function getRecipeById() {\r\n        const data = await API_Get_Recipe( getId() );\r\n        setSelectedRecipe( data );\r\n        setIsLoading( false );\r\n    } \r\n\r\n    function getId() {\r\n        return selectedRecipe.id ? selectedRecipe.id : location.pathname.split('/').reverse()[0];\r\n    }\r\n\r\n    function addToSavedRecipes( add ) {\r\n        \r\n        let newData = [];\r\n        \r\n        if( add ) {\r\n            newData = [...props.savedRecipes, {\r\n                id: selectedRecipe.id,\r\n                title: selectedRecipe.title,\r\n                image: selectedRecipe.image,\r\n                readyInMinutes: selectedRecipe.readyInMinutes,\r\n                diets: selectedRecipe.diets\r\n            }];\r\n        }\r\n        else {\r\n            newData = props.savedRecipes.filter( item => item.id !== selectedRecipe.id );\r\n        }\r\n        \r\n        props.setSavedRecipes( newData );\r\n        saveToLocalStorage( newData );\r\n    } \r\n\r\n    function checkIfSaved() {\r\n        return props.savedRecipes.filter( item => item.id == selectedRecipe.id ).length > 0;        \r\n    }\r\n\r\n    return (\r\n        <div className=\"lg:container mx-auto py-6 px-8\">\r\n            { isLoading ? (\r\n                <Loader />\r\n            ) : (\r\n                <>               \r\n                <RecipeHeader \r\n                    data={selectedRecipe} />\r\n                \r\n                <SaveRecipe \r\n                    saved={ isSaved } \r\n                    setSaved={ addToSavedRecipes }/>\r\n    \r\n                <RecipeIngredients \r\n                    ingredients={selectedRecipe.extendedIngredients}\r\n                    servings={selectedRecipe.servings} /> \r\n\r\n                <RecipeInstructions\r\n                    data={selectedRecipe.analyzedInstructions} /> \r\n\r\n                <RecipeCredits \r\n                    text={selectedRecipe.creditsText}\r\n                    license={selectedRecipe.license} />\r\n                </>                                                                \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","D:\\recipate\\src\\components\\Loader.js",[],"D:\\recipate\\src\\components\\RecipeLabel.js",[],"D:\\recipate\\src\\containers\\LabelDisplay.js",["141"],"import {recipeTimeCalc} from '../state/actions';\r\nimport RecipeLabel from '../components/RecipeLabel';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\n\r\nexport default function({limit, recipe}) {\r\n\r\n    const limitedDiets = () => limit ? recipe.diets.slice(0, limit) : recipe.diets;\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap\">\r\n            <RecipeLabel color=\"yellow\">\r\n                <FeatherIcon icon=\"clock\" width=\"12\" height=\"12\" />\r\n                <span className=\"ml-1\">{ recipeTimeCalc(recipe.readyInMinutes) }</span>\r\n            </RecipeLabel>\r\n\r\n            { limitedDiets().map( (item, i) => \r\n                <RecipeLabel color=\"blue\" key={i}>\r\n                    {item}\r\n                </RecipeLabel> )\r\n            } \r\n        </div>\r\n    );\r\n}","D:\\recipate\\src\\containers\\RecipeHeader.js",[],"D:\\recipate\\src\\containers\\RecipeIngredients.js",["142"],"import React from 'react';\r\nimport Ingredient from '../components/Ingredient';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport RecipeSectionHeader from '../components/RecipeSectionHeader';\r\n\r\nexport default function RecipeSummary({ingredients, servings}) {\r\n    \r\n    const [expand, setExpand] = React.useState(false);\r\n\r\n    const quantityStr = (data) => {\r\n        return data.meta.includes(\"to taste\") ? \"To taste\" : `${data.amount} ${data.unit}`;            \r\n    }\r\n\r\n    const ingredientName = (str) => {\r\n        return str.split(' ').map( item => \r\n            item.split('').map( (c, i) => i == 0 ? c.toUpperCase() : c ).join('')\r\n        ).join(' ')\r\n    }\r\n\r\n    const servingsText = () => {\r\n        return servings ? <p className=\"my-2 text-gray-500\">{`For ${servings} servings`}</p> : '';\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-3\">   \r\n             \r\n            <RecipeSectionHeader \r\n                isOpen={expand}\r\n                clickEv={() => setExpand( !expand )}\r\n                name=\"Ingredients\" />    \r\n\r\n            <div >\r\n                <CSSTransition \r\n                    in={expand} \r\n                    timeout={100} \r\n                    classNames=\"expand\">\r\n                    \r\n                    <div className=\"expand-collapse overflow-hidden\">\r\n                        { servingsText() }\r\n                        <ul>\r\n                            {\r\n                            ingredients.map( (item, i) => \r\n                                <Ingredient \r\n                                    key={ i }\r\n                                    name={ ingredientName(item.name) }\r\n                                    quantity={ quantityStr(item) } /> ) \r\n                            }\r\n                        </ul>\r\n                    </div>                \r\n                </CSSTransition>                \r\n            </div>\r\n        </div>\r\n    );    \r\n}","D:\\recipate\\src\\components\\Ingredient.js",[],"D:\\recipate\\src\\containers\\RecipeInstructions.js",[],"D:\\recipate\\src\\components\\RecipeSectionHeader.js",[],"D:\\recipate\\src\\components\\RecipeCredits.js",[],"D:\\recipate\\src\\containers\\SavedRecipes.js",[],"D:\\recipate\\src\\containers\\SaveRecipe.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":15,"column":8,"nodeType":"153","endLine":15,"endColumn":21,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":34,"column":50,"nodeType":"157","messageId":"158","endLine":34,"endColumn":52},{"ruleId":"155","severity":1,"message":"156","line":3,"column":15,"nodeType":"157","messageId":"158","endLine":3,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":25,"column":51,"nodeType":"157","messageId":"158","endLine":25,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":30,"column":33,"nodeType":"157","messageId":"158","endLine":30,"endColumn":35},{"ruleId":"147","severity":1,"message":"159","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":15},{"ruleId":"151","severity":1,"message":"160","line":28,"column":8,"nodeType":"153","endLine":28,"endColumn":28,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"156","line":62,"column":59,"nodeType":"157","messageId":"158","endLine":62,"endColumn":61},{"ruleId":"162","severity":1,"message":"163","line":6,"column":1,"nodeType":"164","endLine":24,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":16,"column":45,"nodeType":"157","messageId":"158","endLine":16,"endColumn":47},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'SplashScreen' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getSearchResults'. Either include it or remove the dependency array.","ArrayExpression",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sample' is defined but never used.","React Hook useEffect has missing dependencies: 'checkIfSaved' and 'getRecipeById'. Either include them or remove the dependency array.",["168"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [getSearchResults, props.query]",{"range":"173","text":"174"},"Update the dependencies array to be: [checkIfSaved, getRecipeById, props.savedRecipes]",{"range":"175","text":"176"},[478,491],"[getSearchResults, props.query]",[1028,1048],"[checkIfSaved, getRecipeById, props.savedRecipes]"]